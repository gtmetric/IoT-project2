[
    {
        "id": "e6ed8a49.34ead",
        "type": "tab",
        "label": "Node-RED",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e0a513ae.0c3ff8",
        "type": "image viewer",
        "z": "e6ed8a49.34ead",
        "name": "With bounding boxes",
        "width": "320",
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "41a6b3d.e80f0cc",
        "type": "bbox-image",
        "z": "e6ed8a49.34ead",
        "strokeWidth": "4",
        "fontSize": "16",
        "objectsProp": "payload",
        "objectsPropType": "msg",
        "imageProp": "image",
        "imagePropType": "msg",
        "name": "bounding-box",
        "x": 300,
        "y": 520,
        "wires": [
            [
                "e0a513ae.0c3ff8",
                "e90c3838f3dd6c99"
            ]
        ]
    },
    {
        "id": "dd280bb2.d6681",
        "type": "post-object-detection",
        "z": "e6ed8a49.34ead",
        "classesURL": "https://s3.sjc.us.cloud-object-storage.appdomain.cloud/tfjs-cos/cocossd/classes.json",
        "iou": "0.5",
        "minScore": "0.5",
        "name": "post-processing",
        "x": 300,
        "y": 440,
        "wires": [
            [
                "41a6b3d.e80f0cc",
                "34bed9b6da8d900a"
            ]
        ]
    },
    {
        "id": "990f49cc.99ebf8",
        "type": "tf-function",
        "z": "e6ed8a49.34ead",
        "name": "pre-processing",
        "func": "const image = tf.tidy(() => {\n  return tf.node.decodeImage(msg.payload, 3).expandDims(0);\n});\n\nmsg.image = msg.payload;\nmsg.payload = { image_tensor: image }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 280,
        "wires": [
            [
                "995f6de8.b48258"
            ]
        ]
    },
    {
        "id": "995f6de8.b48258",
        "type": "tf-model",
        "z": "e6ed8a49.34ead",
        "modelURL": "https://storage.googleapis.com/tfjs-models/savedmodel/ssdlite_mobilenet_v2/model.json",
        "outputNode": "",
        "name": "COCO SSD lite",
        "x": 300,
        "y": 360,
        "wires": [
            [
                "dd280bb2.d6681"
            ]
        ]
    },
    {
        "id": "34bed9b6da8d900a",
        "type": "function",
        "z": "e6ed8a49.34ead",
        "name": "person-detected",
        "func": "// if (msg.payload[0] && msg.payload[0].className==='person') {\n//     msg.payload = { message: 'Person detected' };\n// } else {\n//     msg.payload = false;\n// }\nmsg.topic = 'isDetected';\nmsg.payload = (msg.payload[0]!==undefined && msg.payload[0].className==='person');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 440,
        "wires": [
            [
                "d5ce8b568c989c7b"
            ]
        ]
    },
    {
        "id": "718cefca574bcd4a",
        "type": "http request",
        "z": "e6ed8a49.34ead",
        "name": "GET /camera",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://192.168.1.125/camera",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "a75321f1c2b14630"
            ]
        ]
    },
    {
        "id": "dff03be5b3541a5a",
        "type": "inject",
        "z": "e6ed8a49.34ead",
        "name": "Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "str",
        "x": 280,
        "y": 40,
        "wires": [
            [
                "718cefca574bcd4a"
            ]
        ]
    },
    {
        "id": "bbd25f19cd863ad3",
        "type": "delay",
        "z": "e6ed8a49.34ead",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 680,
        "wires": [
            [
                "5df59d9495029495"
            ]
        ]
    },
    {
        "id": "bf3a1ff87f8827ff",
        "type": "http request",
        "z": "e6ed8a49.34ead",
        "name": "LINE Notify",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 770,
        "y": 840,
        "wires": [
            [
                "00384d1ff1ad1ed5"
            ]
        ]
    },
    {
        "id": "00384d1ff1ad1ed5",
        "type": "debug",
        "z": "e6ed8a49.34ead",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 840,
        "wires": []
    },
    {
        "id": "5f3e38963d2e4ede",
        "type": "switch",
        "z": "e6ed8a49.34ead",
        "name": "Check payload",
        "property": "payload['isDetected']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "bbd25f19cd863ad3"
            ]
        ]
    },
    {
        "id": "5df59d9495029495",
        "type": "function",
        "z": "e6ed8a49.34ead",
        "name": "Message",
        "func": "msg.headers = {\n    \"Content-Type\": \"multipart/form-data\"\n};\nvar date = new Date().toISOString();\ndate = date.substring(0, 10).replaceAll('-', '/') + '-' + date.substring(11, 16);\nmsg.payload = {\n    \"message\": \"[\"+date+\"] We saw someone. Take a look at the monitor.\\n192.168.1.125\",\n    \"imageFile\": msg.payload.imageFile,\n    \"stickerPackageId\": \"1\",\n    \"stickerId\": \"113\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 760,
        "wires": [
            [
                "bf3a1ff87f8827ff",
                "7f4de1b90e6bd93e"
            ]
        ]
    },
    {
        "id": "d5ce8b568c989c7b",
        "type": "join",
        "z": "e6ed8a49.34ead",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 520,
        "wires": [
            [
                "5f3e38963d2e4ede"
            ]
        ]
    },
    {
        "id": "2e08db6be3854aee",
        "type": "function",
        "z": "e6ed8a49.34ead",
        "name": "imageFile",
        "func": "msg.topic = 'imageFile';\nmsg.complete = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 600,
        "wires": [
            [
                "d5ce8b568c989c7b"
            ]
        ]
    },
    {
        "id": "e90c3838f3dd6c99",
        "type": "jimp-image",
        "z": "e6ed8a49.34ead",
        "name": "covert to png",
        "data": "payload",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "detected.png",
        "parameter1Type": "str",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 1,
        "jimpFunction": "write",
        "selectedJimpFunction": {
            "name": "write",
            "fn": "write",
            "description": "Write to file. NOTE: You can specify an alternative file extension type to change the type. Currently support types are jpg, png, bmp.",
            "parameters": [
                {
                    "name": "filename",
                    "type": "str",
                    "required": true,
                    "hint": "Name of the file",
                    "defaultType": "str"
                }
            ]
        },
        "x": 520,
        "y": 520,
        "wires": [
            [
                "2e08db6be3854aee"
            ]
        ]
    },
    {
        "id": "b7ab82ff.b1a338",
        "type": "image viewer",
        "z": "e6ed8a49.34ead",
        "name": "Original Image viewer",
        "width": "320",
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 540,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a75321f1c2b14630",
        "type": "jimp-image",
        "z": "e6ed8a49.34ead",
        "name": "covert to png",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "raw.png",
        "parameter1Type": "str",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 1,
        "jimpFunction": "write",
        "selectedJimpFunction": {
            "name": "write",
            "fn": "write",
            "description": "Write to file. NOTE: You can specify an alternative file extension type to change the type. Currently support types are jpg, png, bmp.",
            "parameters": [
                {
                    "name": "filename",
                    "type": "str",
                    "required": true,
                    "hint": "Name of the file",
                    "defaultType": "str"
                }
            ]
        },
        "x": 300,
        "y": 200,
        "wires": [
            [
                "990f49cc.99ebf8",
                "b7ab82ff.b1a338"
            ]
        ]
    },
    {
        "id": "7f4de1b90e6bd93e",
        "type": "debug",
        "z": "e6ed8a49.34ead",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 760,
        "wires": []
    }
]